Fix to use mempcpy instead of __mempcpy. This is needed for uclibc which
doesn't define __mempcpy only mempcpy. Since both uclibc and glibc have
mempcpy we'll just use that instead.

Index: grep-2.6.3/lib/getopt.c
===================================================================
--- grep-2.6.3.orig/lib/getopt.c	2010-03-21 00:34:02.000000000 -0700
+++ grep-2.6.3/lib/getopt.c	2010-05-22 21:37:11.352740539 -0700
@@ -41,6 +41,10 @@
 # include <wchar.h>
 #endif
 
+#ifdef __UCLIBC__
+#define __mempcpy mempcpy
+#endif
+
 /* This version of `getopt' appears to the caller like standard Unix `getopt'
    but it behaves differently for the user, since it allows the user
    to intersperse the options with the other arguments.
Index: grep-2.6.3/gnulib-tests/setenv.c
===================================================================
--- grep-2.6.3.orig/gnulib-tests/setenv.c	2010-05-22 21:37:53.655168151 -0700
+++ grep-2.6.3/gnulib-tests/setenv.c	2010-05-22 21:38:42.792745476 -0700
@@ -68,6 +68,10 @@ __libc_lock_define_initialized (static, 
 # define tsearch __tsearch
 #endif
 
+#ifdef __UCLIBC__
+#define __mempcpy mempcpy
+#endif
+
 /* In the GNU C library implementation we try to be more clever and
    allow arbitrarily many changes of the environment given that the used
    values are from a small set.  Outside glibc this will eat up all
Index: grep-2.6.3/lib/regexec.c
===================================================================
--- grep-2.6.3.orig/lib/regexec.c	2010-05-22 21:36:02.655154671 -0700
+++ grep-2.6.3/lib/regexec.c	2010-05-22 21:37:26.212743273 -0700
@@ -22,6 +22,11 @@
 
 #include "verify.h"
 #include "intprops.h"
+
+#ifdef __UCLIBC__
+#define __mempcpy mempcpy
+#endif
+
 static reg_errcode_t match_ctx_init (re_match_context_t *cache, int eflags,
 				     Idx n) internal_function;
 static void match_ctx_clean (re_match_context_t *mctx) internal_function;
